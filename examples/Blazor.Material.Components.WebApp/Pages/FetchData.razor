@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
<MDCDataTable Label="Weather forecast" DataSource="@forecasts" TItem="WeatherForecast">
    <MDCDataTableColumn Header="Date" DataMember="@nameof(WeatherForecast.Date)" TItem="WeatherForecast">
        <DataTemplate>
            @context.Date.ToShortDateString()
        </DataTemplate>
    </MDCDataTableColumn>
    <MDCDataTableColumn Header="Temp. (C)" DataMember="@nameof(WeatherForecast.TemperatureC)" Numeric="true" TItem="WeatherForecast" />
    <MDCDataTableColumn Header="Temp. (F)" DataMember="@nameof(WeatherForecast.TemperatureF)" Numeric="true" TItem="WeatherForecast" />
    <MDCDataTableColumn Header="Summary" DataMember="@nameof(WeatherForecast.Summary)" TItem="WeatherForecast" />
</MDCDataTable>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
