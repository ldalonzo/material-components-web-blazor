name: $(Major).$(Minor).$(Patch)-preview5.$(BuildID)

resources:
- repo: self
  clean: true

pool:
  vmImage: 'windows-latest'
  #vmImage: 'ubuntu-16.04'
  demands:
  - npm

variables:
  Major: 1
  Minor: 0
  Patch: 0
  BuildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self
      submodules: true
      clean: true

    - script: dotnet restore
      displayName: Restore NuGet packages

    - script: dotnet build --configuration $(BuildConfiguration) --no-restore
      displayName: Build

    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        publishTestResults: false
        arguments: '--configuration $(BuildConfiguration) --no-build --results-directory $(Agent.TempDirectory)\TestResults --settings test\coverletArgs.runsettings'

    - task: PowerShell@2
      displayName: 'Publish Test Results'
      inputs:
        targetType: 'filepath'
        filePath: 'test/Send-CoverageResultsToCodecov.ps1'
        arguments: '-TestResultsBasePath $(Agent.TempDirectory) -NuGetPackagesBasePath $(UserProfile)\.nuget\packages -CodecovUploadToken $(CodecovUploadToken)'

    - template: jobs/npm-build.yaml
      parameters:
        name: 'Components'
        workingDir: $(Build.SourcesDirectory)\src\Leonardo.AspNetCore.Components.Material

    - task: DotNetCoreCLI@2
      displayName: 'Components - dotnet pack'
      inputs:
        command: custom
        custom: 'pack'
        arguments: '$(Build.SourcesDirectory)\src\Leonardo.AspNetCore.Components.Material\Leonardo.AspNetCore.Components.Material.csproj --configuration $(BuildConfiguration) -p:Version=$(Build.BuildNumber) -p:PackageVersion=$(Build.BuildNumber) --output $(Build.ArtifactStagingDirectory)/nuget'

    - task: PublishBuildArtifacts@1
      displayName: 'Components - Publish Artifact'
      inputs:
        artifactName: 'nuget' 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/nuget'

    - template: jobs/npm-build.yaml
      parameters:
        name: 'Catalog'
        workingDir: $(Build.SourcesDirectory)\examples\Blazor.Material.Components.WebApp

    - task: DotNetCoreCLI@2
      displayName: 'Catalog - dotnet publish'
      inputs:
        command: custom
        custom: publish
        publishWebProjects: false
        zipAfterPublish: false
        arguments: '$(Build.SourcesDirectory)/examples/Blazor.Material.Components.WebApp/Blazor.Material.Components.WebApp.csproj --configuration $(BuildConfiguration) -p:Version=$(Build.BuildNumber) -p:AssemblyVersion=$(Major).$(Minor).$(Patch).$(Build.BuildID) --output $(Build.ArtifactStagingDirectory)/catalog'

    - task: PublishBuildArtifacts@1
      displayName: 'Catalog - Publish Artifact'
      inputs:
        artifactName: 'demo' 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/catalog'

    - task: AzureFileCopy@2
      displayName: 'Catalog - Deploy to Blob Storage'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
      inputs:
        SourcePath: $(Build.ArtifactStagingDirectory)/catalog/wwwroot
        azureSubscription: $(AzureSubscription)
        Destination: AzureBlob
        storage: $(storage)
        ContainerName: '$web'

    - task: AzureRmWebAppDeployment@4
      displayName: 'Catalog - Deploy to Azure App Service'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      inputs:
        azureSubscription: $(AzureSubscription)
        WebAppKind: webApp
        WebAppName: 'blazor-material'
        Package: $(Build.ArtifactStagingDirectory)/catalog
        RemoveAdditional: true
