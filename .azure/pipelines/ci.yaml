name: $(Major).$(Minor).$(Patch)-preview.$(BuildID)

resources:
- repo: self
  clean: true

pool:
  vmImage: 'windows-latest'
  demands:
  - npm

variables:
  Major: 1
  Minor: 0
  Patch: 0
  BuildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self
      clean: true
    
    - script: dotnet restore
      displayName: Restore NuGet packages
    
    - script: dotnet build --configuration $(BuildConfiguration) --no-restore
      displayName: Build
    
    - task: DotNetCoreCLI@2
      displayName: 'Test'
      inputs:
        command: test
        publishTestResults: false
        arguments: '--configuration $(BuildConfiguration) --no-build --results-directory $(Agent.TempDirectory)\TestResults --settings test\coverletArgs.runsettings'
    
    - task: PowerShell@2
      displayName: 'Publish Test Results'
      inputs:
        targetType: 'filepath'
        filePath: 'test/Send-CoverageResultsToCodecov.ps1'
        arguments: '-TestResultsBasePath $(Agent.TempDirectory) -NuGetPackagesBasePath $(UserProfile)\.nuget\packages -CodecovUploadToken $(CodecovUploadToken)'
    
    - task: Npm@1
      displayName: 'Build Static Assets - npm ci'
      inputs:
        command: ci
        workingDir: $(Build.SourcesDirectory)\src\Leonardo.AspNetCore.Components.Material
        verbose: false
    
    - task: Npm@1
      displayName: 'Build Static Assets - npm run build'
      inputs:
        command: custom
        workingDir: $(Build.SourcesDirectory)\src\Leonardo.AspNetCore.Components.Material
        verbose: false
        customCommand: 'run build'
    
    - task: DotNetCoreCLI@2
      displayName: 'Pack'
      inputs:
        command: custom
        custom: 'pack'
        arguments: '$(Build.SourcesDirectory)\src\Leonardo.AspNetCore.Components.Material\Leonardo.AspNetCore.Components.Material.csproj --configuration $(BuildConfiguration) -p:Version=$(Build.BuildNumber) -p:PackageVersion=$(Build.BuildNumber) --output $(Build.ArtifactStagingDirectory)/nuget'
    
    - task: DotNetCoreCLI@2
      displayName: 'Publish Live Demo'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
         **/Blazor.Material.Components.WebApp.csproj
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/demo -p:Version=$(Build.BuildNumber)'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: Demo'
      inputs:
        artifactName: 'demo' 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/demo'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: NuGet'
      inputs:
        artifactName: 'nuget' 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/nuget'
